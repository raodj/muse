<?xml version="1.0"?>
<!-- The XML Schema definition for MUSE-GUI workspace configuration file -->

<!-- ===================================================================
      ___
     /\__\    This file is part of MUSE    <http://www.muse-tools.org/>
    /::L_L_
   /:/L:\__\  Miami   University  Simulation  Environment    (MUSE)  is
   \/_/:/  /  free software: you can  redistribute it and/or  modify it
     /:/  /   under the terms of the GNU  General Public License  (GPL)
     \/__/    as published  by  the   Free  Software Foundation, either
              version 3 (GPL v3), or  (at your option) a later version.
      ___
     /\__\    MUSE  is distributed in the hope that it will  be useful,
    /:/ _/_   but   WITHOUT  ANY  WARRANTY;  without  even  the IMPLIED
   /:/_/\__\  WARRANTY of  MERCHANTABILITY  or FITNESS FOR A PARTICULAR
   \:\/:/  /  PURPOSE.
    \::/  /
     \/__/    Miami University  and  the MUSE  development team make no
              representations  or  warranties  about the suitability of
      ___     the software,  either  express  or implied, including but
     /\  \    not limited to the implied warranties of merchantability,
    /::\  \   fitness  for a  particular  purpose, or non-infringement.
   /\:\:\__\  Miami  University and  its affiliates shall not be liable
   \:\:\/__/  for any damages  suffered by the  licensee as a result of
    \::/  /   using, modifying,  or distributing  this software  or its
     \/__/    derivatives.
  
      ___     By using or  copying  this  Software,  Licensee  agree to
     /\  \    abide  by the intellectual  property laws,  and all other
    /::\  \   applicable  laws of  the U.S.,  and the terms of the  GNU
   /::\:\__\  General  Public  License  (version 3).  You  should  have
   \:\:\/  /  received a  copy of the  GNU General Public License along
    \:\/  /   with MUSE.  If not,  you may  download  copies  of GPL V3
     \/__/    from <http://www.gnu.org/licenses/>.
  
====================================================================== -->

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	    targetNamespace="http://pc2lab.cec.miamiOH.edu/"
	    xmlns="http://pc2lab.cec.miamiOH.edu/"
            elementFormDefault="qualified">
    
    <xsd:annotation>
        <xsd:appinfo>MUSE GUI</xsd:appinfo>
        <xsd:documentation>
            MUSE-GUI schema definition for workspace file
        </xsd:documentation>
    </xsd:annotation>
    
    <!-- Datatype for the version ID used further below in this schema  -->
    <xsd:simpleType name="VersionID">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="0.1"/>
        </xsd:restriction>
    </xsd:simpleType>

    <!-- The Workspace root element definition. A workspace has the
	 following information associated with it:
	 
	 1. A root directory where all files associated with the
	    workspace are stored.
	 2. A creation time stamp when the workspace was created.
	 3. Zero or more DataSet elements (see definition for DataSet
	    element further below).
	 4. A ServerList element (see definition for the ServerList
	   element further below.
      -->
    <xsd:element name="Workspace">
	<xsd:complexType>
	    <xsd:sequence>
		<xsd:element name="Directory"  type="xsd:string" />
		<xsd:element name="Timestamp"  type="xsd:dateTime" />
		<xsd:element name="SeqCounter" type="xsd:long"/>
		<xsd:element ref="ServerList"/>
	    </xsd:sequence>
	    <xsd:attribute name="Version" type="VersionID" use="required" />
	</xsd:complexType>
    </xsd:element>

    <!-- =============================================================== 
	ServerList is just list of zero or more Server entries
     ===================================================================  -->
    <xsd:element name="ServerList">
	<xsd:complexType>
	    <xsd:sequence>
		<xsd:element ref="Server" minOccurs="0" maxOccurs="unbounded" />
	    </xsd:sequence>
	</xsd:complexType>
    </xsd:element>
    
    <!-- Note that the enumeration string must match the string constants
         used in the C++ source files (see workspace/Server.cpp) -->
    <xsd:simpleType name="ServerOSType">
	<xsd:restriction base="xsd:string">
	    <xsd:enumeration value="linux" />
	    <xsd:enumeration value="unix" />
	    <xsd:enumeration value="windows" />
	    <xsd:enumeration value="unknown_os" />            
	</xsd:restriction>
    </xsd:simpleType>
    
    <!--  enumerations defining different status values for servers.
          Note that the strings must match the string constants used in the
          C++ source files (see workspace/Server.cpp) -->
    <xsd:simpleType name="ServerStatusType">
	<xsd:restriction base="xsd:string">
	    <xsd:enumeration value="installing" />
	    <xsd:enumeration value="install_failed" />
	    <xsd:enumeration value="good" />
	    <xsd:enumeration value="uninstalling" />
	    <xsd:enumeration value="uninstall_failed" />
	    <xsd:enumeration value="connect_failed" />
	</xsd:restriction>
    </xsd:simpleType>

    <!-- This element represnets a server entry and defines all the
	 information that is needed to access a server and run jobs is
	 defined here.
      -->
    <xsd:element name="Server">
	<xsd:complexType>
	    <xsd:sequence>
		<xsd:element name="ID"          type="xsd:token" />
                <xsd:element name="Remote"      type="xsd:boolean" />
		<xsd:element name="Name"        type="xsd:token" />
		<xsd:element name="Port"        type="xsd:positiveInteger"/>
		<xsd:element name="Description" type="xsd:string" />
		<xsd:element name="UserID"      type="xsd:token" />
		<xsd:element name="InstallPath" type="xsd:string" />
		<xsd:element name="Status"      type="ServerStatusType"/>
                <xsd:element name="OSType"      type="ServerOSType"/>
            </xsd:sequence>
	</xsd:complexType>
    </xsd:element>

</xsd:schema>

