#---------------------------------------------------------------------------
#
# Copyright (c) Miami University, Oxford, OH.
# All rights reserved.
#
# Miami University (MU) makes no representations or warranties about
# the suitability of the software, either express or implied,
# including but not limited to the implied warranties of
# merchantability, fitness for a particular purpose, or
# non-infringement.  MU shall not be liable for any damages suffered
# by licensee as a result of using, result of using, modifying or
# distributing this software or its derivatives.
#
# By using or copying this Software, Licensee agrees to abide by the
# intellectual property laws, and all other applicable laws of the
# U.S., and the terms of this license.
#
# Authors: Dhananjai M. Rao       raodm@muohio.edu
#
#---------------------------------------------------------------------------

#
# This file is a global make file that is included by all makefiles in
# the build hierarchy.  Setting flags here impacts the entire project
# build.
#

GLOBALCPPFLAGS  = $(WALL) $(WEXTRA) $(PIPE) $(INFORM_WARN) -g $(OPT_O3)
# Flag bleow enables printing rollback stats to files.
GLOBALCPPFLAGS += -DRB_STATS
GLOBALCPPFLAGS += -DSTATE_STATS
# GLOBALCPPFLAGS += -fno-builtin-malloc -fno-builtin-calloc -fno-builtin-realloc -fno-builtin-free
GLOBALCPPFLAGS += $(ICC_NO_WARN_SOME)
GLOBALCPPFLAGS += $(USING_ICC) $(USING_GCC) -DREGULAR_COMPILE
GLOBALCXXFLAGS  = $(CPP11) $(CPP0X)

# The following compiler-flag enables recording of rollback stats in
# each MPI-process (separate file per process)
# GLOBALCPPFLAGS += -DRB_STATS

# The following compiler-flag enables recording of simulation states
# during a rollback, with the data formatted as comma separated values.
# GLOBALCPPFLAGS += -STATE_STATS

# For profiling the frame pointers are important for short methods.
GLOBALCPPFLAGS += -fno-omit-frame-pointer

# The following compiler flag enables additional sanity checks that
# may slow down simulations.  So for full performance and performance
# comparisons ensure the following flag is disabled.
GLOBALCPPFLAGS += $(DEV_ASSERT)

# Override configure settings to enable developer assertions used for
# validating/sanity-checks throughout the code base
# GLOBALCPPFLAGS += -DDEVELOPER_ASSERTIONS

# The following flag is typically enabled in configure. The following
# compiler flag causes simulation to write verbose output to Log*.txt
# file(s).  It is primarily designed to be used with single-threaded
# MPI simulations.
# GLOBALCPPFLAGS += -DDEBUG_OUTPUT

# The following compiler flag enables recyling of events during
# simulation. See Event::allocate and Event::deallocate methods.
GLOBALCPPFLAGS += -DRECYCLE_EVENTS

# The following compiler flag enables recyling of states.
GLOBALCPPFLAGS += -DRECYCLE_STATES

# Additional include path for OpenCL headers
GLOBALCPPFLAGS += $(OPEN_CL_PATH)

AM_CXXFLAGS = $(GLOBALCXXFLAGS)
AM_CPPFLAGS = $(GLOBALCPPFLAGS) \
	-I$(top_builddir)/include
AM_CFLAGS   = -std=c99

# Setup the global LD flags to include OpenCL library if available
AM_LDFLAGS = $(OPEN_CL_LDPATH)

# end of Makefile.global.am
